/*
 * generated by Xtext 2.33.0
 */
grammar InternalVideoEdit;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.videoedit.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.videoedit.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.videoedit.services.VideoEditGrammarAccess;

}
@parser::members {
	private VideoEditGrammarAccess grammarAccess;

	public void setGrammarAccess(VideoEditGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProject
entryRuleProject
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectAccess().getGroup()); }
		(rule__Project__Group__0)
		{ after(grammarAccess.getProjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrack
entryRuleTrack
:
{ before(grammarAccess.getTrackRule()); }
	 ruleTrack
{ after(grammarAccess.getTrackRule()); } 
	 EOF 
;

// Rule Track
ruleTrack 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrackAccess().getGroup()); }
		(rule__Track__Group__0)
		{ after(grammarAccess.getTrackAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClip
entryRuleClip
:
{ before(grammarAccess.getClipRule()); }
	 ruleClip
{ after(grammarAccess.getClipRule()); } 
	 EOF 
;

// Rule Clip
ruleClip 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClipAccess().getGroup()); }
		(rule__Clip__Group__0)
		{ after(grammarAccess.getClipAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAudioLevel
entryRuleAudioLevel
:
{ before(grammarAccess.getAudioLevelRule()); }
	 ruleAudioLevel
{ after(grammarAccess.getAudioLevelRule()); } 
	 EOF 
;

// Rule AudioLevel
ruleAudioLevel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAudioLevelAccess().getGroup()); }
		(rule__AudioLevel__Group__0)
		{ after(grammarAccess.getAudioLevelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeCode
entryRuleTimeCode
:
{ before(grammarAccess.getTimeCodeRule()); }
	 ruleTimeCode
{ after(grammarAccess.getTimeCodeRule()); } 
	 EOF 
;

// Rule TimeCode
ruleTimeCode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeCodeAccess().getGroup()); }
		(rule__TimeCode__Group__0)
		{ after(grammarAccess.getTimeCodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TrackType
ruleTrackType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrackTypeAccess().getAlternatives()); }
		(rule__TrackType__Alternatives)
		{ after(grammarAccess.getTrackTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrackType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrackTypeAccess().getV1EnumLiteralDeclaration_0()); }
		('V1')
		{ after(grammarAccess.getTrackTypeAccess().getV1EnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTrackTypeAccess().getV2EnumLiteralDeclaration_1()); }
		('V2')
		{ after(grammarAccess.getTrackTypeAccess().getV2EnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTrackTypeAccess().getV3EnumLiteralDeclaration_2()); }
		('V3')
		{ after(grammarAccess.getTrackTypeAccess().getV3EnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTrackTypeAccess().getA1EnumLiteralDeclaration_3()); }
		('A1')
		{ after(grammarAccess.getTrackTypeAccess().getA1EnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTrackTypeAccess().getA2EnumLiteralDeclaration_4()); }
		('A2')
		{ after(grammarAccess.getTrackTypeAccess().getA2EnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTrackTypeAccess().getA3EnumLiteralDeclaration_5()); }
		('A3')
		{ after(grammarAccess.getTrackTypeAccess().getA3EnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__0__Impl
	rule__Project__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
	'project'
	{ after(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__1__Impl
	rule__Project__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getNameAssignment_1()); }
	(rule__Project__NameAssignment_1)
	{ after(grammarAccess.getProjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__2__Impl
	rule__Project__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__3__Impl
	rule__Project__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getTracksAssignment_3()); }
	(rule__Project__TracksAssignment_3)*
	{ after(grammarAccess.getProjectAccess().getTracksAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Track__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__0__Impl
	rule__Track__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getTrackKeyword_0()); }
	'track'
	{ after(grammarAccess.getTrackAccess().getTrackKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__1__Impl
	rule__Track__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getTypeAssignment_1()); }
	(rule__Track__TypeAssignment_1)
	{ after(grammarAccess.getTrackAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__2__Impl
	rule__Track__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getNameAssignment_2()); }
	(rule__Track__NameAssignment_2)
	{ after(grammarAccess.getTrackAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__3__Impl
	rule__Track__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTrackAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__4__Impl
	rule__Track__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getClipsAssignment_4()); }
	(rule__Track__ClipsAssignment_4)*
	{ after(grammarAccess.getTrackAccess().getClipsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Track__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrackAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTrackAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Clip__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__0__Impl
	rule__Clip__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getClipKeyword_0()); }
	'clip'
	{ after(grammarAccess.getClipAccess().getClipKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__1__Impl
	rule__Clip__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getNameAssignment_1()); }
	(rule__Clip__NameAssignment_1)
	{ after(grammarAccess.getClipAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__2__Impl
	rule__Clip__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getClipAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__3__Impl
	rule__Clip__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getSourceKeyword_3()); }
	'source:'
	{ after(grammarAccess.getClipAccess().getSourceKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__4__Impl
	rule__Clip__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getSourceAssignment_4()); }
	(rule__Clip__SourceAssignment_4)
	{ after(grammarAccess.getClipAccess().getSourceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__5__Impl
	rule__Clip__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getSource_inKeyword_5()); }
	'source_in:'
	{ after(grammarAccess.getClipAccess().getSource_inKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__6__Impl
	rule__Clip__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getSourceInAssignment_6()); }
	(rule__Clip__SourceInAssignment_6)
	{ after(grammarAccess.getClipAccess().getSourceInAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__7__Impl
	rule__Clip__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getSource_outKeyword_7()); }
	'source_out:'
	{ after(grammarAccess.getClipAccess().getSource_outKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__8__Impl
	rule__Clip__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getSourceOutAssignment_8()); }
	(rule__Clip__SourceOutAssignment_8)
	{ after(grammarAccess.getClipAccess().getSourceOutAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__9__Impl
	rule__Clip__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getTarget_positionKeyword_9()); }
	'target_position:'
	{ after(grammarAccess.getClipAccess().getTarget_positionKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__10__Impl
	rule__Clip__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getTargetPositionAssignment_10()); }
	(rule__Clip__TargetPositionAssignment_10)
	{ after(grammarAccess.getClipAccess().getTargetPositionAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__11__Impl
	rule__Clip__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getAudioLevelAssignment_11()); }
	(rule__Clip__AudioLevelAssignment_11)?
	{ after(grammarAccess.getClipAccess().getAudioLevelAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__12__Impl
	rule__Clip__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getGroup_12()); }
	(rule__Clip__Group_12__0)?
	{ after(grammarAccess.getClipAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getRightCurlyBracketKeyword_13()); }
	'}'
	{ after(grammarAccess.getClipAccess().getRightCurlyBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Clip__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group_12__0__Impl
	rule__Clip__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getSync_withKeyword_12_0()); }
	'sync_with:'
	{ after(grammarAccess.getClipAccess().getSync_withKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clip__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipAccess().getSyncWithAssignment_12_1()); }
	(rule__Clip__SyncWithAssignment_12_1)
	{ after(grammarAccess.getClipAccess().getSyncWithAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AudioLevel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AudioLevel__Group__0__Impl
	rule__AudioLevel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioLevel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAudioLevelAccess().getAudio_levelKeyword_0()); }
	'audio_level:'
	{ after(grammarAccess.getAudioLevelAccess().getAudio_levelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioLevel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AudioLevel__Group__1__Impl
	rule__AudioLevel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioLevel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAudioLevelAccess().getLevelAssignment_1()); }
	(rule__AudioLevel__LevelAssignment_1)
	{ after(grammarAccess.getAudioLevelAccess().getLevelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioLevel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AudioLevel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioLevel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAudioLevelAccess().getPercentSignKeyword_2()); }
	'%'
	{ after(grammarAccess.getAudioLevelAccess().getPercentSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeCode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeCode__Group__0__Impl
	rule__TimeCode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeCodeAccess().getHoursAssignment_0()); }
	(rule__TimeCode__HoursAssignment_0)
	{ after(grammarAccess.getTimeCodeAccess().getHoursAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeCode__Group__1__Impl
	rule__TimeCode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeCodeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTimeCodeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeCode__Group__2__Impl
	rule__TimeCode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeCodeAccess().getMinutesAssignment_2()); }
	(rule__TimeCode__MinutesAssignment_2)
	{ after(grammarAccess.getTimeCodeAccess().getMinutesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeCode__Group__3__Impl
	rule__TimeCode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeCodeAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getTimeCodeAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeCode__Group__4__Impl
	rule__TimeCode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeCodeAccess().getSecondsAssignment_4()); }
	(rule__TimeCode__SecondsAssignment_4)
	{ after(grammarAccess.getTimeCodeAccess().getSecondsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeCode__Group__5__Impl
	rule__TimeCode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeCodeAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getTimeCodeAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeCode__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeCodeAccess().getFramesAssignment_6()); }
	(rule__TimeCode__FramesAssignment_6)
	{ after(grammarAccess.getTimeCodeAccess().getFramesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getProjectAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__TracksAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getTracksTrackParserRuleCall_3_0()); }
		ruleTrack
		{ after(grammarAccess.getProjectAccess().getTracksTrackParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrackAccess().getTypeTrackTypeEnumRuleCall_1_0()); }
		ruleTrackType
		{ after(grammarAccess.getTrackAccess().getTypeTrackTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrackAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTrackAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Track__ClipsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrackAccess().getClipsClipParserRuleCall_4_0()); }
		ruleClip
		{ after(grammarAccess.getTrackAccess().getClipsClipParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClipAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getClipAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__SourceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClipAccess().getSourceSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getClipAccess().getSourceSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__SourceInAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClipAccess().getSourceInTimeCodeParserRuleCall_6_0()); }
		ruleTimeCode
		{ after(grammarAccess.getClipAccess().getSourceInTimeCodeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__SourceOutAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClipAccess().getSourceOutTimeCodeParserRuleCall_8_0()); }
		ruleTimeCode
		{ after(grammarAccess.getClipAccess().getSourceOutTimeCodeParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__TargetPositionAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClipAccess().getTargetPositionTimeCodeParserRuleCall_10_0()); }
		ruleTimeCode
		{ after(grammarAccess.getClipAccess().getTargetPositionTimeCodeParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__AudioLevelAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClipAccess().getAudioLevelAudioLevelParserRuleCall_11_0()); }
		ruleAudioLevel
		{ after(grammarAccess.getClipAccess().getAudioLevelAudioLevelParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clip__SyncWithAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClipAccess().getSyncWithClipCrossReference_12_1_0()); }
		(
			{ before(grammarAccess.getClipAccess().getSyncWithClipSTRINGTerminalRuleCall_12_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getClipAccess().getSyncWithClipSTRINGTerminalRuleCall_12_1_0_1()); }
		)
		{ after(grammarAccess.getClipAccess().getSyncWithClipCrossReference_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AudioLevel__LevelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAudioLevelAccess().getLevelINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAudioLevelAccess().getLevelINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__HoursAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeCodeAccess().getHoursINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeCodeAccess().getHoursINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__MinutesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeCodeAccess().getMinutesINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeCodeAccess().getMinutesINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__SecondsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeCodeAccess().getSecondsINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeCodeAccess().getSecondsINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCode__FramesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeCodeAccess().getFramesINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeCodeAccess().getFramesINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
