/*
 * generated by Xtext 2.33.0
 */
package org.xtext.example.videoedit.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.videoedit.ide.contentassist.antlr.internal.InternalVideoEditParser;
import org.xtext.example.videoedit.services.VideoEditGrammarAccess;

public class VideoEditParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(VideoEditGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, VideoEditGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getTrackTypeAccess().getAlternatives(), "rule__TrackType__Alternatives");
			builder.put(grammarAccess.getProjectAccess().getGroup(), "rule__Project__Group__0");
			builder.put(grammarAccess.getTrackAccess().getGroup(), "rule__Track__Group__0");
			builder.put(grammarAccess.getClipAccess().getGroup(), "rule__Clip__Group__0");
			builder.put(grammarAccess.getClipAccess().getGroup_12(), "rule__Clip__Group_12__0");
			builder.put(grammarAccess.getAudioLevelAccess().getGroup(), "rule__AudioLevel__Group__0");
			builder.put(grammarAccess.getTimeCodeAccess().getGroup(), "rule__TimeCode__Group__0");
			builder.put(grammarAccess.getProjectAccess().getNameAssignment_1(), "rule__Project__NameAssignment_1");
			builder.put(grammarAccess.getProjectAccess().getTracksAssignment_3(), "rule__Project__TracksAssignment_3");
			builder.put(grammarAccess.getTrackAccess().getTypeAssignment_1(), "rule__Track__TypeAssignment_1");
			builder.put(grammarAccess.getTrackAccess().getNameAssignment_2(), "rule__Track__NameAssignment_2");
			builder.put(grammarAccess.getTrackAccess().getClipsAssignment_4(), "rule__Track__ClipsAssignment_4");
			builder.put(grammarAccess.getClipAccess().getNameAssignment_1(), "rule__Clip__NameAssignment_1");
			builder.put(grammarAccess.getClipAccess().getSourceAssignment_4(), "rule__Clip__SourceAssignment_4");
			builder.put(grammarAccess.getClipAccess().getSourceInAssignment_6(), "rule__Clip__SourceInAssignment_6");
			builder.put(grammarAccess.getClipAccess().getSourceOutAssignment_8(), "rule__Clip__SourceOutAssignment_8");
			builder.put(grammarAccess.getClipAccess().getTargetPositionAssignment_10(), "rule__Clip__TargetPositionAssignment_10");
			builder.put(grammarAccess.getClipAccess().getAudioLevelAssignment_11(), "rule__Clip__AudioLevelAssignment_11");
			builder.put(grammarAccess.getClipAccess().getSyncWithAssignment_12_1(), "rule__Clip__SyncWithAssignment_12_1");
			builder.put(grammarAccess.getAudioLevelAccess().getLevelAssignment_1(), "rule__AudioLevel__LevelAssignment_1");
			builder.put(grammarAccess.getTimeCodeAccess().getHoursAssignment_0(), "rule__TimeCode__HoursAssignment_0");
			builder.put(grammarAccess.getTimeCodeAccess().getMinutesAssignment_2(), "rule__TimeCode__MinutesAssignment_2");
			builder.put(grammarAccess.getTimeCodeAccess().getSecondsAssignment_4(), "rule__TimeCode__SecondsAssignment_4");
			builder.put(grammarAccess.getTimeCodeAccess().getFramesAssignment_6(), "rule__TimeCode__FramesAssignment_6");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private VideoEditGrammarAccess grammarAccess;

	@Override
	protected InternalVideoEditParser createParser() {
		InternalVideoEditParser result = new InternalVideoEditParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public VideoEditGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(VideoEditGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
