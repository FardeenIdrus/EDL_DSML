/**
 * generated by Xtext 2.33.0
 */
package org.xtext.example.videoedit.videoEdit;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Track Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.example.videoedit.videoEdit.VideoEditPackage#getTrackType()
 * @model
 * @generated
 */
public enum TrackType implements Enumerator
{
  /**
   * The '<em><b>V1</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #V1_VALUE
   * @generated
   * @ordered
   */
  V1(0, "V1", "V1"),

  /**
   * The '<em><b>V2</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #V2_VALUE
   * @generated
   * @ordered
   */
  V2(1, "V2", "V2"),

  /**
   * The '<em><b>V3</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #V3_VALUE
   * @generated
   * @ordered
   */
  V3(2, "V3", "V3"),

  /**
   * The '<em><b>A1</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #A1_VALUE
   * @generated
   * @ordered
   */
  A1(3, "A1", "A1"),

  /**
   * The '<em><b>A2</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #A2_VALUE
   * @generated
   * @ordered
   */
  A2(4, "A2", "A2"),

  /**
   * The '<em><b>A3</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #A3_VALUE
   * @generated
   * @ordered
   */
  A3(5, "A3", "A3");

  /**
   * The '<em><b>V1</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #V1
   * @model
   * @generated
   * @ordered
   */
  public static final int V1_VALUE = 0;

  /**
   * The '<em><b>V2</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #V2
   * @model
   * @generated
   * @ordered
   */
  public static final int V2_VALUE = 1;

  /**
   * The '<em><b>V3</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #V3
   * @model
   * @generated
   * @ordered
   */
  public static final int V3_VALUE = 2;

  /**
   * The '<em><b>A1</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #A1
   * @model
   * @generated
   * @ordered
   */
  public static final int A1_VALUE = 3;

  /**
   * The '<em><b>A2</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #A2
   * @model
   * @generated
   * @ordered
   */
  public static final int A2_VALUE = 4;

  /**
   * The '<em><b>A3</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #A3
   * @model
   * @generated
   * @ordered
   */
  public static final int A3_VALUE = 5;

  /**
   * An array of all the '<em><b>Track Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final TrackType[] VALUES_ARRAY =
    new TrackType[]
    {
      V1,
      V2,
      V3,
      A1,
      A2,
      A3,
    };

  /**
   * A public read-only list of all the '<em><b>Track Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<TrackType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Track Type</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TrackType get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      TrackType result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Track Type</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TrackType getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      TrackType result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Track Type</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TrackType get(int value)
  {
    switch (value)
    {
      case V1_VALUE: return V1;
      case V2_VALUE: return V2;
      case V3_VALUE: return V3;
      case A1_VALUE: return A1;
      case A2_VALUE: return A2;
      case A3_VALUE: return A3;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private TrackType(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //TrackType
